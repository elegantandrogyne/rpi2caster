# Define the casters you'll be using your interface with.
# If you have a keyboard's paper tower, define it here too.
#
# A caster is defined by a sub-section in the "Casters" section.
# The subsection is named with the caster's defined name.
#
# In the caster subsection, you specify parameters:
#
#   interface_id [0, 1, 2, 3] - ID of an interface to use with this caster,
#
#   diecase_system [norm15, norm17, hmn, kmn, shift] - diecase format
#                  and how to access row 16 if applicable:
#                  norm15    - 15x15 matrix cases ONLY (oldest)
#                  norm17    - 15x17 NI,NL columns (newer)
#                  hmn       - 16x17 H-M-N (rare)
#                  kmn       - 16x17 K-M-N (rare)
#                  shift     - 16x17 unit shift (post-60s)
#
#   unit_adding [0, 1] - whether the machine has an unit-adding attachement 
#
# If the subsection has no entries beside interface_id,
# then it's not usable as a caster, but can be used
# for a keyboard's paper tower.


[mkart-cc]
interface_id=0
diecase_system=shift
unit_adding=0

[mkart-lcc1]
diecase_system=norm17
unit_adding=0
interface_id=0

[keyboard]
interface_id=0


# Interfaces:
#
# Define 0, one or more interfaces connected to your
# Raspberry Pi. An interface MUST have following parameters:
#   active [0 or 1]          - whether the interface can be used,
#   photocell_gpio [int]     - Broadcom number for photocell GPIO,
#   mcp0_address [hexstring] - 1st MCP23017 I2C address,
#   mcp1_address [hexstring] - 2nd MCP23017 I2C address,
#   pin_base [int]           - pin base for numbering GPIOs
#                                on MCP23017 chips.
#
# If no interface is defined, the program will use
# built-in defaults for interface_id=0.


[Interface0]
active=1
emergency_gpio=24
photocell_gpio=17
mcp0_address=0x20
mcp1_address=0x21
pin_base=65

[Interface1]
active=0
emergency_gpio=6
photocell_gpio=12
mcp0_address=0x22
mcp1_address=0x23
pin_base=98


# Control parameters:
#
# Specify GPIO numbers for the controls related to system
# (poweroff button, reboot button, ready LED)
# These parameters will be read by the gpiodaemon program,
# which also sets up the interrupt handling for photocell
# and emergency stop button inputs (these things have to
# be done with root privileges - and rpi2caster is meant
# to run under regular user account).


[Control]
led_gpio=18
shutdown_gpio=22
reboot_gpio=23


# Database parameters:
#
# The type and access path of a database, in which all workshop
# inventory is stored (i.e. wedges, diecases, matrix data).
# Currently, only SQLite3 is supported,
# but there is a possibility of adding local or remote MySQL db
# (especially on Raspi 2 or newer, which has more processing power
# and can run a "heavyweight" MySQL server).
# This would be useful for large printshops using several casters
# with individual interfaces - with a centralized database
# to store all the diecase data etc.


[Database]
type=sqlite3
path=/etc/rpi2caster/monotype.db
